import noise  # Utilisation de la bibliothèque noise pour générer du bruit de Perlin

def create_maze(maze):
    s.blocks = {}
    walls = wall_pos_for_maze(maze)

    # Paramètres pour le bruit de Perlin
    scale = 0.1  # Le facteur d'échelle du bruit
    octaves = 4  # Le nombre d'octaves du bruit de Perlin
    persistence = 0.5  # La persistance du bruit
    lacunarity = 2.0  # La lacunarity du bruit

    for pos, orientation in walls:
        x, y = pos[0], pos[1]
        
        # Calcul du bruit de Perlin à partir des coordonnées (x, y)
        perlin_noise_value = noise.pnoise2(x * scale, y * scale, octaves=octaves, persistence=persistence, lacunarity=lacunarity)
        
        # Définir la couleur du mur en fonction de la valeur du bruit
        if perlin_noise_value < -0.1:
            model, color, refraction = (s.woodenwall_model, s.woodenwall_color, s.woodenwall_refraction)
        elif perlin_noise_value < 0.1:
            model, color, refraction = (s.white_wall_model, s.white_wall_color, s.white_wall_refraction)
        else:
            model, color, refraction = (s.red_wall_model, s.red_wall_color, s.red_wall_refraction)

        # Création du mur avec la couleur déterminée
        s.Wall((x * s.wall_length, 1, y * s.wall_length), orientation, model, color, refraction, height=5)
